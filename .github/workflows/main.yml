# This is a basic workflow to help you get started with Actions

name: Deploy

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    # 使用 npm  缓存
    - name: Cache node modules
      uses: actions/cache@v2
      id: cache
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are storeed in '~/.npm' on Linux/Mac os
        path: node_modules
        key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

    # 安装依赖
    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm install

    # 打包
    - name: Build project
      run: npm run build

    # build docker images
    - name: Build docker images
      run: docker build -t ${{secrets.IMAGE_NAME}}:latest ./

    - name: Login to Tencent registry
      run: docker login --username=${{secrets.DOCKER_HUB_USERNAME}} --password=${{secrets.DOCKER_HUB_PASSWORD}} ${{secrets.DOCKER_HUB_HOST}}

    - name: Push Image
      run: docker push ${{secrets.DOCKER_HUB_HOST}}/${{secrets.DOCKER_HUB_NAMESPACE}}/${{secrets.IMAGE_NAME}}:latest

    #- name: Send to server
    #  uses: appleboy/scp-action@master
    #  with:
    #    host: ${{ secrets.REMOTE_HOST }}
    #    username: ${{ secrets.REMOTE_USER }}
    #    # key: ${{ secrets.SERVER_SSH_KEY }}
    #    password: ${{ secrets.SERVER_PASSWORD }}
    #    port: 22
    #    rm: true
    #    source: "docs/.vuepress/dist/"
    #    target: "/var/www/blog"
    #    strip_components: 3


